---
- name: delete apt chache
  become: yes
  become_user: root
  become_method: su
  command: rm -vf /var/lib/apt/lists/*

- name: install nginx nginx extras
  apt:
   pkg:
     - nginx
     - nginx-extras
   state: latest

- name: start nginx
  service:
   name: nginx
   state: started

- name: menginstall tools
  apt:
   pkg:
     - curl
     - software-properties-common
     - unzip
   state: latest

- name: Add php7.4 repo
  apt_repository:
    repo: 'ppa:ondrej/php'

- name: Updating the repo
  apt: update_cache=yes


- name: install php dpkg php7.4
  apt:
    pkg:
      - php7.4
      - php7.4-fpm
      - php7.4-common
      - php7.4-mysql
      - php7.4-xml
      - php7.4-xmlrpc
      - php7.4-curl
      - php7.4-gd
      - php7.4-imagick
      - php7.4-cli
      - php7.4-dev
      - php7.4-imap
      - php7.4-mbstring
      - php7.4-opcache
      - php7.4-redis
      - php7.4-soap
      - php7.4-zip
    state: present

  become_method: su
  get_url:
    url: https://getcomposer.org/installer
    dest: /tmp/installer

- name: install composer
  become: yes
  become_user: root
  become_method: su
  shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin

- name: rename composer
  become: yes
  become_user: root
  become_method: su
  command: mv /usr/local/bin/composer.phar /usr/local/bin/composer

- name: Composer create project
  become_user: root
  composer:
   command: create-project
   arguments: laravel/laravel landing
   working_dir: /var/www/html
   prefer_dist: yes
  environment:
     COMPOSER_NO_INTERACTION: "1"

- name: Copy .env file
  copy:
    src: /var/www/html/landing/.env.example
    dest: /var/www/html/landing/.env
    remote_src: yes

- name: mengganti konfigurasi .env
  lineinfile:
   path: /var/www/html/landing/.env
   regexp: "{{ item.regexp }}"
   line: "{{ item.line }}"
   backrefs: yes
  loop:
   - { regexp: '^(.*)DB_HOST(.*)$', line: 'DB_HOST=10.0.3.200' }
   - { regexp: '^(.*)DB_DATABASE(.*)$', line: 'DB_DATABASE=landing' }
   - { regexp: '^(.*)DB_USERNAME(.*)$', line: 'DB_USERNAME=admin' }
   - { regexp: '^(.*)DB_PASSWORD(.*)$', line: 'DB_PASSWORD=020801' }
   - { regexp: '^(.*)APP_URL(.*)$', line: 'APP_URL=http://vm.local' }
   - { regexp: '^(.*)APP_NAME=(.*)$', line: 'APP_NAME=landing' }

- name: Composer install ke landing
  composer:
    command: install
    working_dir: /var/www/html/landing
  environment:
    COMPOSER_NO_INTERACTION: "1"

- name: generate php artisan
  args:
   chdir: /var/www/html/landing
  shell: php artisan key:generate

- name: mengganti permission storage
  file:
   path: /var/www/html/landing/storage
   mode: 0777
   recurse: yes

- name: Copy landing.conf
  template:
    src=templates/landing.conf
    dest=/etc/nginx/sites-available/{{ domain }}
  vars:
    servername: '{{ domain }}'

- name: Delete another nginx config
  become: yes
  become_user: root
  become_method: su
  command: rm -f /etc/nginx/sites-enabled/*

- name: Symlink landing.conf
  command: ln -sfn /etc/nginx/sites-available/{{ domain }} /etc/nginx/s>  
  notify:
    - restart nginx

- name: Write {{ domain }} to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ domain }}$'
    line: "127.0.0.1 {{ domain }}"
    state: present
